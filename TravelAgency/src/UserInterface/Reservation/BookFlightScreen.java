/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Reservation;

import UserInterface.Airliner.*;
import Business.Airliner.Airliner;
import Business.Airliner.Flight;
import Business.Customer.Customer;
import Business.Customer.Reservation;
import Business.TravelAgency.TravelAgency;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TeamCodeHater
 */
public class BookFlightScreen extends javax.swing.JPanel {

    private JPanel rightPanel;
    private TravelAgency agency;
    private Flight selectedFlight;

    /**
     * Creates new form AgentMainScreen
     */
    public BookFlightScreen(JPanel rightPanel, TravelAgency agency, Flight flight) {
        initComponents();
        this.rightPanel = rightPanel;
        this.agency = agency;
        this.selectedFlight = flight;
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boxName = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        boxRow = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        boxCol = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        btnBack.setText("<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setText("Book a flight");

        jLabel3.setText("Customer Name");

        boxName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxNameItemStateChanged(evt);
            }
        });

        btnSearch.setText("Book");
        btnSearch.setToolTipText("");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        boxRow.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxRowItemStateChanged(evt);
            }
        });
        boxRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxRowActionPerformed(evt);
            }
        });

        jLabel4.setText("Select a Row");

        jLabel5.setText("Select a Column");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addComponent(boxRow, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTitle)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(29, 29, 29)
                                    .addComponent(boxName, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(29, 29, 29)
                                .addComponent(boxCol, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(304, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(boxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(boxRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(boxCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initialize() {
        boxName.removeAllItems();
        if (!this.agency.getCustomerDir().getCustomers().isEmpty()) {
            for (Customer cust : this.agency.getCustomerDir().getCustomers()) {
                boxName.addItem(cust.getFirstName() + " " + cust.getLastName());
            }
            boxName.setSelectedIndex(0);
        }

        boxRow.removeAllItems();
        boxCol.removeAllItems();
        int[][] seats = this.selectedFlight.getSeats();
        if (seats.length > 0) {
            ArrayList<Integer> rows = this.getAvailableRows(seats);
            for (int i : rows) {
                boxRow.addItem(i + "");
            }
            /*for(int row=0;row<seats.length;row++)
            {
                boxRow.addItem(row+"");
                for(int col=0;col<seats.length;col++)
                {
                    if(seats[row][col]==0)
                        boxCol.addItem(col+"");
                }
            }*/
            boxRow.setSelectedIndex(0);
            //boxCol.setSelectedIndex(0);
        }
    }

    private ArrayList<Integer> getAvailableRows(int[][] seats) {
        ArrayList<Integer> rows = new ArrayList<Integer>();
        for (int i = 0; i < seats.length; i++) {
            for (int j = 0; j < seats[0].length; j++) {
                if (seats[i][j] == 0 && !rows.contains(i)) {
                    rows.add(i);
                }
            }
        }
        return rows;
    }

    private ArrayList<Integer> getAvailableCols(int[][] seats, int row) {
        ArrayList<Integer> cols = new ArrayList<Integer>();
        for (int j = 0; j < seats[0].length; j++) {
            if (seats[row][j] == 0 && !cols.contains(j)) {
                cols.add(j);
            }
        }

        return cols;
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) this.rightPanel.getLayout();
        this.rightPanel.remove(this);
        layout.show(rightPanel, "SearchFlightsScreen");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

        Customer cust = this.agency.getCustomerDir().getCustomers().get(this.boxName.getSelectedIndex());
        String rowStr = this.boxRow.getSelectedItem().toString();
        String colStr = this.boxCol.getSelectedItem().toString();
        int row = 0, col = 0;
        try {
            row = Integer.parseInt(rowStr);
            col = Integer.parseInt(colStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Not a valid number.");
            return;
        }
        Reservation res = new Reservation(this.selectedFlight.getFlightNum(), Integer.parseInt(rowStr), Integer.parseInt(colStr));
        if (cust.reservedThisFlight(res)) {
            JOptionPane.showMessageDialog(null, "Customer " + cust.getFirstName() + " " + cust.getLastName() + " has already reserved this flight.");
            return;
        } else if (this.overlapped(cust)) {
            JOptionPane.showMessageDialog(null, "Customer " + cust.getFirstName() + " " + cust.getLastName() + " has already reserved a flight that overlapped with this one");
            return;
        } else {
            boolean bookRes = this.selectedFlight.book(row, col);
            if (bookRes) {
                cust.getReservedList().add(res);
                JOptionPane.showMessageDialog(null, "Reserve succussfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Selected seat has been reserved by others!");
            }
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void boxRowItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxRowItemStateChanged
        // TODO add your handling code here:
        try {
            Integer.parseInt(this.boxRow.getSelectedItem().toString());
        } catch (Exception e) {

            return;
        }
        int row = Integer.parseInt(this.boxRow.getSelectedItem().toString());

        boxCol.removeAllItems();
        ArrayList<Integer> cols = this.getAvailableCols(this.selectedFlight.getSeats(), row);
        for (int i : cols) {
            boxCol.addItem(i + "");
        }
        /*for(int row=0;row<seats.length;row++)
            {
                boxRow.addItem(row+"");
                for(int col=0;col<seats.length;col++)
                {
                    if(seats[row][col]==0)
                        boxCol.addItem(col+"");
                }
            }*/
        boxCol.setSelectedIndex(0);

    }//GEN-LAST:event_boxRowItemStateChanged

    private void boxNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxNameItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_boxNameItemStateChanged

    private void boxRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxRowActionPerformed
        // TODO add your handling code here:
        try {
            Integer.parseInt(this.boxRow.getSelectedItem().toString());
        } catch (Exception e) {

            return;
        }
        int row = Integer.parseInt(this.boxRow.getSelectedItem().toString());

        boxCol.removeAllItems();
        ArrayList<Integer> cols = this.getAvailableCols(this.selectedFlight.getSeats(), row);
        for (int i : cols) {
            boxCol.addItem(i + "");
        }

        boxCol.setSelectedIndex(0);
    }//GEN-LAST:event_boxRowActionPerformed

    private boolean overlapped(Customer cust) {
        for (Reservation r : cust.getReservedList()) {
            Flight f = this.agency.getAirlinerDir().getFlightByNum(r.getFlightNo());
            if (f != null) {
                if (this.selectedFlight.getFlightDate().compareTo(f.getFlightDate()) != 0) {
                    continue;
                } else if (this.selectedFlight.getArrivalTime().before(f.getDepartureTime()) || this.selectedFlight.getDepartureTime().after(f.getArrivalTime())) {
                    continue;
                } else if (f.getArrivalTime().after(this.selectedFlight.getDepartureTime()) || f.getDepartureTime().before(this.selectedFlight.getArrivalTime())) {
                    return true;
                }
            }
        }
        return false;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCol;
    private javax.swing.JComboBox<String> boxName;
    private javax.swing.JComboBox<String> boxRow;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
